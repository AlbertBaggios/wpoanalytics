#LyX 1.6.4.1 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "linkcolor=blue, citecolor=blue, urlcolor=blue, filecolor=blue, pdftex"
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Web Performance Optimization: Analytics
\end_layout

\begin_layout Author
Wim Leers
\begin_inset Newline newline
\end_inset

December 2, 2009
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Thesis proposal for the degree of
\begin_inset Newline newline
\end_inset

master in computer science/databases
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Date
Hasselt University
\begin_inset Newline newline
\end_inset

Academic year 2009-2010
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
My bachelor thesis was about making Drupal 
\begin_inset CommandInset citation
LatexCommand cite
key "Drupal"

\end_inset

 web sites load faster.
 80 to 90% of the response time (as observed by the end user) is spent on
 downloading the components of a web page 
\begin_inset CommandInset citation
LatexCommand cite
key "High Performance Web Sites Book"

\end_inset

.
 Therefor this is also the part where optimizations have the largest effect.
\end_layout

\begin_layout Standard
To be able to prove the positive impact of optimizing the loading of the
 components of a web site — thereby proving that the work I was going to
 have done had a positive impact — I researched existing page loading profiling
 tools.
 Episodes 
\begin_inset CommandInset citation
LatexCommand cite
key "white paper Episodes,presentation Episodes"

\end_inset

 (which refers to the various 
\emph on
episodes
\emph default
 in the page loading sequence) came out as a clear winner:
\end_layout

\begin_layout Itemize
Episodes aims to become an industry standard;
\end_layout

\begin_layout Itemize
Episodes is open source;
\end_layout

\begin_layout Itemize
Episodes is a piece of JavaScript that runs in the browser on each loaded
 page, thus for each real visitor, thus it represents the real-world performance
 (all existing solutions 
\begin_inset CommandInset citation
LatexCommand cite
key "Gomez web site,Keynote web site,WebMetrics web site,Pingdom web site"

\end_inset

 require simulations, which implies they're also only suitable for simulating
 traffic on a new version of a web site before it goes live);
\end_layout

\begin_layout Itemize
Episodes does not require any hardware other than a server to log to.
\end_layout

\begin_layout Standard
Also as part of my bachelor thesis, I wrote a simple Drupal module — the
 Episodes module 
\begin_inset CommandInset citation
LatexCommand cite
key "Drupal Episodes module"

\end_inset

 — that could create simple charts to compare the average page loading time
 per day per geographic region.
 For my test case, with two weeks of collecting data, this was the resulting
 dataset:
\end_layout

\begin_layout Quotation
About 100 MB worth of statistics had been logged.
 These were then imported on June 25, resulting in a database table of 642.4
 MB.
 More than 2.7 million episodes were collected over more than 260,000 page
 views.
 
\end_layout

\begin_layout Standard
While my test case was a fairly big web site (500,000-1,000,000 page views
 per month), that's nothing when compared with the top-100 web sites.
 And even for these mere 2.7 million recorded episodes, it took several minutes
 to generate simple charts (see figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Episodes-chart-episodes"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Episodes-chart-plp"

\end_inset

).
 And that doesn't include importing the log file into the database.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/episodes analysis - episodes.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Episodes analysis charts about episodes generated by the Drupal Episodes
 module.
\begin_inset CommandInset label
LatexCommand label
name "fig:Episodes-chart-episodes"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/episodes analysis - page loading performance.png
	height 98theight%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Episodes analysis charts about page loading performance generated by the
 Drupal Episodes module.
\begin_inset CommandInset label
LatexCommand label
name "fig:Episodes-chart-plp"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
That is of course largely due to the fact that the database schema used
 is extremely inefficient: it is in fact a verbatim copy of the log file.
 The database schema should be optimized for the queries that are necessary
 to generate the charts.
 In its current incarnation, multiple full table scans are required, which
 is a worst case scenario.
\end_layout

\begin_layout Standard
Despite its obvious (intended) lack of optimizations, it was sufficient
 to prove that File Conveyor 
\begin_inset CommandInset citation
LatexCommand cite
key "File Conveyor"

\end_inset

 — the daemon that I wrote to automatically sync files to any CDN, regardlesss
 of the file transfer protocol used — when integrated with a Drupal web
 site and thus providing CDN integration for that web site, had a positive
 impact: the test web site consistently loaded about 100% faster, especially
 for visitors with slower internet connections, such as visitors from Brazil.
 Without this proof-of-concept implementation, I would never have been able
 to prove the positive impact on performance.
\end_layout

\begin_layout Section
Context
\end_layout

\begin_layout Standard
Ever since Steve Souders' 
\emph on
High Performance Web Sites
\emph default
 book 
\begin_inset CommandInset citation
LatexCommand cite
key "High Performance Web Sites Book"

\end_inset

, interest in making web sites load faster has been increasing.
 More and more big companies with a strong 
\emph on
web presence
\emph default
 are paying attention to page loading performance: the well-known ones such
 as Microsoft, Yahoo, Google, but also big companies that are not technology
 companies such as Amazon, White Pages, Shopzilla, Edmunds, Netflix ….
\end_layout

\begin_layout Subsection*
Page loading profiling tools
\end_layout

\begin_layout Standard
As a result of this trend, a large number of advanced page loading profiling
 tools are being developed:
\end_layout

\begin_layout Itemize
Deep tracing of the internals of Internet Explorer, by using dynaTrace Ajax
 
\begin_inset CommandInset citation
LatexCommand cite
key "WPO tool dynaTrace Ajax"

\end_inset


\end_layout

\begin_layout Itemize
JavaScript memory heap profiler and sample-based CPU profiler in WebKit/Google
 Chrome 
\begin_inset CommandInset citation
LatexCommand cite
key "WPO tool WebKit"

\end_inset


\end_layout

\begin_layout Itemize
Firefox has been leading the way with the development of the Firebug extension
 and the Yahoo! YSlow 
\begin_inset CommandInset citation
LatexCommand cite
key "WPO tool Yahoo! YSlow"

\end_inset

 & Google Page Speed 
\begin_inset CommandInset citation
LatexCommand cite
key "WPO tool Google Page Speed"

\end_inset

 Firebug plug-ins
\end_layout

\begin_layout Subsection*
Proposals
\end_layout

\begin_layout Standard
Recent proposals (in the last three months at the time of writing) for web
 performance optimization include:
\end_layout

\begin_layout Itemize
Resource Packages 
\begin_inset CommandInset citation
LatexCommand cite
key "WPO proposal resource packages,WPO proposal resource packages - comments by Steve Souders"

\end_inset

.
 A resource package is a zip file that bundles multiple resources into a
 single file and therefor requires only a single HTTP response and avoids
 multiple round trip delays.
 Browsers typically only take advantage of about 30% of their bandwidth
 capacity because of the overhead of HTTP and TCP and the various blocking
 behaviors in browsers.
 This proposal would result in less bandwidth being consumed by overhead.
 Plus, it's backwards compatible: browsers that don't support it load the
 page the same way as today.
\end_layout

\begin_layout Itemize
Web Timing 
\begin_inset CommandInset citation
LatexCommand cite
key "WPO proposal web timing"

\end_inset

.
 This is a proposal presented to the W3C and welcomes feedback from browser
 vendors.
 It effectively means that Episodes is being moved into the actual browser
 partially, to get rid of the latency of loading Episodes' JavaScript and
 the relatively inaccurate time measurements of JavaScript.
 It would also allow us to get a complete picture of the end-to-end latency,
 which is impossible to do with Episodes (which can only rely upon what
 JavaScript itself can do).
 This proposal is only a working draft and requires interacting with browser
 vendors to ensure all current major browsers will implement this.
 Even in the best case scenario, it will take years until the majority of
 the installed browsers will support this.
 Until then, we will be limited in what we can measure.
 Hence this proposal should move forward as fast as possible.
\end_layout

\begin_layout Standard
Both would severely affect browser implementations, which indicates the
 willingness and likeliness to change the way data is transferred over the
 internet to make web sites load faster.
\end_layout

\begin_layout Subsection*
Search engine ranking
\end_layout

\begin_layout Standard
The importance of page loading performance is lifted to an even higher level
 by the fact that Google announced that it will likely let page speed (i.e.
 page loading performance) influence the ranking of web pages 
\begin_inset CommandInset citation
LatexCommand cite
key "Google page speed ranking"

\end_inset

.
 This effectively means that all companies whom have been paying for SEO
 (search engine optimization) will also have to consider page loading performanc
e.
\end_layout

\begin_layout Section
Problem
\end_layout

\begin_layout Standard
The main problem is that sites are too slow.
 In my bachelor thesis, I implemented a daemon to synchronize files to a
 CDN, which is one of the most important ways to speed up the loading of
 a web site.
\end_layout

\begin_layout Standard
However, simply implementing all known tricks is not enough, because using
 a CDN might speed up your web site for half your visitors and slow it down
 for the other half — although that's an extremely unlikely scenario.
 That's why you need to be able to do Continuous Profiling (cfr.
 Continuous Integration).
\end_layout

\begin_layout Standard

\emph on
Continuous Profiling means that you are continuously monitoring your real-world
 page loading performance: you must track the page loading characteristics
 of 
\emph default
each
\emph on
 loaded page! 
\emph default
That by itself is easy: all it requires is to integrate Episodes with your
 web site.
 The actual problem lies in analyzing the collected data.
 To be able to draw meaningful conclusions from the collected data, we need
 to apply data mining techniques as well as visualizing the conclusions
 that are found.
 E.g.
 pages may be loading slower from South-Africa because the CDN's server
 there (a 
\emph on
PoP
\emph default
) is offline, or your shopping cart checkout page may be loading slow in
 Firefox because of a JavaScript issue, or a particular page may be loading
 slow in all web browsers because of bad CSS on that page, or maybe your
 site is loading very slow for all users of a certain ISP because their
 DNS server has poor performance.
 All of these problems (and more) could be pinpointed (albeit partially)
 automatically.
\end_layout

\begin_layout Standard
So what I think is needed, is something like Google Analytics, but for 
\emph on
page loading performance
\emph default
 instead of just 
\emph on
page loads
\emph default
.
\end_layout

\begin_layout Section
Proposal: Analytics Suite
\end_layout

\begin_layout Standard
So that is exactly what my proposal is: an analytics suite for tracking
 page loading performance.
 An application that can automatically extract conclusions out of Episodes
 logs and visualize them.
 This application should be very scalable (as the number of recorded episodes
 is typically an order of magnitude higher than the number of page views)
 and possibly also distributed.
 You should also be able to go back to any point in the past and view the
 page loading performance at that time.
 Thus, efficient storage is also a requirement.
 Finally, it should be an open source application that can be developed
 further by others after I finish my master thesis.
\end_layout

\begin_layout Standard
I told Steve Souders about my idea for my master thesis — he is the most
 prominent speaker, researcher and evangelizer in the page loading performance
 scene and on Google's payroll to push this forward — and asked him for
 feedback.
 His response:
\end_layout

\begin_layout Quotation
I did a mini performance conference in LA last month and heard three big
 companies (Shopzilla, Edmunds, and Google PicasaWeb) get up and say they
 had regressed in their web site performance because they weren't tracking
 latency.
 I realized that most companies aren't even at the point where they have
 good metrics.
 I think the first idea — Google Analytics for latency — is the best idea.
 […] It would be great if this lived on Google AppEngine.
 Users could take the code and spin up their own instance — for free! You
 could also host a shared instance.
 I will say that the work […] on AppEngine has been hard because of the
 datastore - my officemate does the programming and it's taken him months
 to do what I did in a few days on the LAMP stack.
\end_layout

\begin_layout Standard
He agrees on the necessity for such an application and immediately proposes
 to make it run on Google AppEngine 
\begin_inset CommandInset citation
LatexCommand cite
key "Google AppEngine"

\end_inset

, which is a free platform for web applications with its own, apparently
 complicated, datastore that is schemaless.
 The idea is that anybody can create a free AppEngine account, install this
 application and get a Continuous Profiling application for free!
\end_layout

\begin_layout Standard
Whether it would run or Google AppEngine or not, it's certain that an open
 source Continuous page loading performance profiling would be very valuable.
 I hope I'll be able to build it!
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Drupal"

\end_inset


\emph on
Drupal
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://drupal.org/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "File Conveyor"

\end_inset


\emph on
File Conveyor
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://fileconveyor.org/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "High Performance Web Sites Book"

\end_inset


\emph on
High Performance Web Sites
\emph default
, Steve Souders, 2007, O'Reilly, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://stevesouders.com/hpws/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "white paper Episodes"

\end_inset


\emph on
Episodes: a Framework for Measuring Web Page Load Times
\emph default
, Steve Souders, July 2008, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://stevesouders.com/episodes/paper.php
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "presentation Episodes"

\end_inset


\emph on
Episodes: a shared approach for timing web pages
\emph default
, Steve Souders, 2008, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://stevesouders.com/docs/episodes-tae-20080930.ppt
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Gomez web site"

\end_inset


\emph on
Gomez
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.gomez.com/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Keynote web site"

\end_inset


\emph on
Keynote
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.keynote.com/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "WebMetrics web site"

\end_inset


\emph on
WebMetrics
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.webmetrics.com/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Pingdom web site"

\end_inset


\emph on
Pingdom
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://pingdom.com/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Drupal Episodes module"

\end_inset


\emph on
Episodes
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://drupal.org/project/episodes
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "WPO tool dynaTrace Ajax"

\end_inset


\emph on
Deep Tracing of Internet Explorer
\emph default
, John Resig, Mozilla, November 17, 2009, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://ejohn.org/blog/deep-tracing-of-internet-explorer/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "WPO tool WebKit"

\end_inset


\emph on
An Update for Google Chrome's Developer Tools
\emph default
, Pavel Feldman, Google, November 30, 2009, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://code.google.com/events/io/2009/sessions/MeasureMillisecondsPerformanceTipsW
ebToolkit.html
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "WPO tool Yahoo! YSlow"

\end_inset


\emph on
Yahoo! YSlow
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://developer.yahoo.com/yslow/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "WPO tool Google Page Speed"

\end_inset


\emph on
Google Page Speed
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://code.google.com/speed/page-speed/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "WPO proposal resource packages"

\end_inset


\emph on
Making browsers faster: Resource Packages
\emph default
, Alexander Limi, November 17, 2009, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://limi.net/articles/resource-packages/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "WPO proposal resource packages - comments by Steve Souders"

\end_inset


\emph on
Fewer requests through resource packages
\emph default
, Steve Souders, November 18, 2009, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.stevesouders.com/blog/2009/11/18/fewer-requests-through-resource-packag
es/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "WPO proposal web timing"

\end_inset


\emph on
Web Timing (Working Draft)
\emph default
, Zhiheng Wang, Google Inc., September 26, 2009, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://dev.w3.org/2006/webapi/WebTiming/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Google page speed ranking"

\end_inset


\emph on
Google: Page Speed May Become a Ranking Factor in 2010
\emph default
, WebProNews, November 19, 2009, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.webpronews.com/topnews/2009/11/13/google-page-speed-may-be-a-ranking-fa
ctor-in-2010
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Google Analytics"

\end_inset


\emph on
Google Analytics
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://google.com/analytics
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Google AppEngine"

\end_inset


\emph on
Google AppEngine
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://code.google.com/appengine
\end_layout

\end_inset


\end_layout

\end_body
\end_document
